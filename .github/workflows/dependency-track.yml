name: Dependency Track Upload

on:
  push:
    branches: [ $default-branch ]
  pull_request:
    branches: [ $default-branch ]
  workflow_call:
    inputs:
      version:
        type: string
        description: 'The version of the project, defaults to the branch name'
      tags:
        type: string
        description: 'Comma separated list of tags to apply to the project'
      parentProjectUuid:
        type: string
        description: 'The UUID of the parent project'
      directoryPath:
        type: string
        description: 'The directory path to scan for lock files, defaults to the root of the repository'
        default: '.'
      composerDirectoryPath:
        type: string
        description: 'The directory path for the composer.lock file, defaults to `directoryPath` if unset'
      npmDirectoryPath:
        type: string
        description: 'The directory path for the package-lock.json file, defaults to `directoryPath` if unset'
    secrets:
      DEPENDENCYTRACK_API_KEY:
        required: true

jobs:
  php_sbom:
    name: Generate PHP SBOM
    runs-on: ubuntu-latest

    env:
      BRANCH_NAME: ${{ github.head_ref || github.ref_name }} 

    steps:
      - uses: actions/checkout@v4

      - name: Check composer.lock file exists
        id: lock-file-check
        run: |
          if [ ! -f composer.lock ]; then
            echo "composer.lock file not found in directory, skipping"
            echo "skip=true" >> $GITHUB_OUTPUT
          fi
        working-directory: ${{ inputs.composerDirectoryPath || inputs.directoryPath }}

      - name: Setup PHP
        if : ( steps.lock-file-check.outputs.skip != 'true' ) 
        uses: shivammathur/setup-php@v2.31.1
        with:
            extensions: xml, mbstring
            tools: composer:v2
        env:
            COMPOSER_TOKEN: ${{ inputs.GITHUB_TOKEN }}

      - name: Install CycloneDX CLI
        if : ( steps.lock-file-check.outputs.skip != 'true' ) 
        run: |
          sudo apt-get install -y build-essential libxml2-utils
          wget -q https://github.com/CycloneDX/cyclonedx-cli/releases/latest/download/cyclonedx-linux-x64 -O /usr/local/bin/cyclonedx-cli
          chmod +x /usr/local/bin/cyclonedx-cli

      - name: Install Composer dependencies
        if : ( steps.lock-file-check.outputs.skip != 'true' ) 
        run: |
          composer global config --no-plugins allow-plugins.cyclonedx/cyclonedx-php-composer true
          composer global require cyclonedx/cyclonedx-php-composer

      - name: Generate BoM
        if : ( steps.lock-file-check.outputs.skip != 'true' ) 
        run: composer CycloneDX:make-sbom --output-file sbom-php.xml --spec-version="1.2"
        working-directory: ${{ inputs.composerDirectoryPath || inputs.directoryPath }}

      - name: Convert SBOM
        if : ( steps.lock-file-check.outputs.skip != 'true' ) 
        run: cyclonedx-cli convert --input-file sbom-php.xml --output-file sbom.json --output-format json --output-version v1_2
        working-directory: ${{ inputs.composerDirectoryPath || inputs.directoryPath }}

      - name: Add default tags
        if : ( steps.lock-file-check.outputs.skip != 'true' ) 
        run: |
          export TAGS="Language:PHP,PackageManager:Composer,Branch:${BRANCH_NAME}"
          if [ -n "${{ inputs.tags }}" ]; then
            export TAGS="${TAGS},${{ inputs.tags }}"
          elif [ -n "${{ vars.DEPENDENCYTRACK_TAGS }}" ]; then
            export TAGS="${TAGS},${{ vars.DEPENDENCYTRACK_TAGS }}"
          fi
          echo TAGS=$TAGS >> $GITHUB_ENV

      - name: Upload to Dependency Track
        if : ( steps.lock-file-check.outputs.skip != 'true' ) 
        uses: DependencyTrack/gh-upload-sbom@v3
        with:
          serverhostname: ${{ vars.DEPENDENCYTRACK_API }}
          apikey: ${{ secrets.DEPENDENCYTRACK_API_KEY }}
          projectname: ${{ github.event.repository.name }} PHP/Composer
          projectversion: ${{ inputs.version || github.ref_name }}
          parent: ${{ inputs.parentProjectUuid || vars.DEPENDENCYTRACK_PARENT_PROJECT_UUID }}
          projecttags: ${{ env.TAGS }}
          bomfilename: "${{ inputs.composerDirectoryPath || inputs.directoryPath }}/sbom.json"
          autocreate: true

  npm_sbom:
    name: Generate NPM SBOM
    runs-on: ubuntu-latest

    env:
      BRANCH_NAME: ${{ github.head_ref || github.ref_name }} 

    steps:
      - uses: actions/checkout@v4

      - name: Check package-lock.json file exists
        id: lock-file-check
        run: |
          if [ ! -f package-lock.json ]; then
            echo "package-lock.json file not found in directory, skipping"
            echo "skip=true" >> $GITHUB_OUTPUT
          fi
        working-directory: ${{ inputs.npmDirectoryPath || inputs.directoryPath }}

      - name: Install NPM
        if : ( steps.lock-file-check.outputs.skip != 'true' ) 
        uses: actions/setup-node@v4

      - name: Install CycloneDX CLI
        if : ( steps.lock-file-check.outputs.skip != 'true' ) 
        run: |
          sudo apt-get install -y build-essential libxml2-utils
          wget -q https://github.com/CycloneDX/cyclonedx-cli/releases/latest/download/cyclonedx-linux-x64 -O /usr/local/bin/cyclonedx-cli
          chmod +x /usr/local/bin/cyclonedx-cli

      - name: Install NPM dependencies
        if : ( steps.lock-file-check.outputs.skip != 'true' ) 
        run: npm install -g @cyclonedx/cyclonedx-npm

      - name: Install NPM modules
        if : ( steps.lock-file-check.outputs.skip != 'true' ) 
        run: |
          npm ci
        working-directory: ${{ inputs.npmDirectoryPath || inputs.directoryPath }}

      - name: Generate BoM
        if : ( steps.lock-file-check.outputs.skip != 'true' ) 
        run: cyclonedx-npm --output-format xml --output-file sbom-npm.xml --spec-version 1.2
        working-directory: ${{ inputs.npmDirectoryPath || inputs.directoryPath }}
      
      - name: Convert SBOM
        if : ( steps.lock-file-check.outputs.skip != 'true' ) 
        run: cyclonedx-cli convert --input-file sbom-npm.xml --output-file sbom.json --output-format json --output-version v1_2
        working-directory: ${{ inputs.npmDirectoryPath || inputs.directoryPath }}

      - name: Add default tags
        if : ( steps.lock-file-check.outputs.skip != 'true' ) 
        run: |
          export TAGS="Language:NPM,PackageManager:NPM,Branch:${BRANCH_NAME}"
          if [ -n "${{ inputs.tags }}" ]; then
            export TAGS="${TAGS},${{ inputs.tags }}"
          elif [ -n "${{ vars.DEPENDENCYTRACK_TAGS }}" ]; then
            export TAGS="${TAGS},${{ vars.DEPENDENCYTRACK_TAGS }}"
          fi
          echo TAGS=$TAGS >> $GITHUB_ENV

      - name: Upload to Dependency Track
        if : ( steps.lock-file-check.outputs.skip != 'true' ) 
        uses: DependencyTrack/gh-upload-sbom@v3
        with:
          serverhostname: ${{ vars.DEPENDENCYTRACK_API }}
          apikey: ${{ secrets.DEPENDENCYTRACK_API_KEY }}
          projectname: ${{ github.event.repository.name }} NPM
          projectversion: ${{ inputs.version || github.ref_name }}
          parent: ${{ inputs.parentProjectUuid || vars.DEPENDENCYTRACK_PARENT_PROJECT_UUID }}
          projecttags: ${{ inputs.tags }}
          bomfilename: "${{ inputs.npmDirectoryPath || inputs.directoryPath }}/sbom.json"
          autocreate: true
